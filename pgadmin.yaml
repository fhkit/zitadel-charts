#
# secrets.yaml
#
# OAuth2 client id and secret value is sensitive information
# Store it securely in a secret
---
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin4-oauth2-secret
type: Opaque
stringData:
  OAUTH2_CLIENT_ID: ******
  OAUTH2_CLIENT_SECRET: ******

#
# configmaps.yaml
#
# To setup Google OAuth
## https://support.google.com/googleapi/answer/6158849?hl=en#
# To setup Github OAuth
## https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app
# To setup Microsoft Azure AD OAuth
## https://learn.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app
# redirect|callback URI to set:
## https://pgadmin4.example.com/oauth2/authorize
# logout URL (required for Microsoft OAuth)
## https://pgadmin4.example.com/oauth2/logout
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin4-config
data:
  config_local.py: |-
    import os

    MASTER_PASSWORD_REQUIRED = True
    AUTHENTICATION_SOURCES = ['oauth2', 'internal']
    OAUTH2_AUTO_CREATE_USER = True
    OAUTH2_CONFIG = [
      {
        'OAUTH2_NAME': 'zitadel',
        'OAUTH2_DISPLAY_NAME': 'Netsnek OIDC',
        'OAUTH2_CLIENT_ID': os.environ['OAUTH2_CLIENT_ID'],
        'OAUTH2_CLIENT_SECRET': os.environ['OAUTH2_CLIENT_SECRET'],
        'OAUTH2_API_BASE_URL': 'https://accounts.netsnek.com',
        'OAUTH2_TOKEN_URL': 'https://accounts.netsnek.com/oauth/v2/token',
        'OAUTH2_AUTHORIZATION_URL': 'https://accounts.netsnek.com/oauth/v2/authorize',
        'OAUTH2_USERINFO_ENDPOINT': 'https://accounts.netsnek.com/oidc/v1/userinfo',
        'OAUTH2_SCOPE': 'openid email profile',
        'OAUTH2_SSL_CERT_VERIFICATION': True,
        'OAUTH2_SERVER_METADATA_URL': None,
        'OAUTH2_BUTTON_COLOR': '#f77f00',
        'OAUTH2_ICON': 'fa-openid',
      }
    ]
    SHARED_STORAGE = [{ 'name': 'Certs', 'path': '/var/lib/pgadmin/certs/', 'restricted_access': False}]
---
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-pgpassfile-secret
type: Opaque
stringData:
  pgpassfile: |
    hostname:port:database:username:password
